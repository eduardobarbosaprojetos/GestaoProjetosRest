

#  Aten\u00e7\u00e3o quando for utilizar altere o nome desse arquivo para application.properties


#essa linha vc s\u00f3 vai conseguir utilizar se estiver rodando um servidor embutido dentro da sua ide de desenvolvimento
#exemplo vc utiliza o netbens e tem o tomcat rodando dentro dele como servidor ai essa linha vai dizer ao tomcat que
#vc quer que ele rode a sua aplica\u00e7\u00e3o na porta 8080
#quando vc for colocar o .war gerando no servidor de aplica\u00e7\u00e3o do backend ele deve tem java 8
#intalado e tem que ser tomcat vers\u00e3o 8 tamb\u00e9m caso contrario n\u00e3o vai funcionar em vers\u00f5es anteriores
#em vers\u00f5es acima de 8 pode ser que funcione mais tem que testar
#essas configura\u00e7\u00f5es s\u00e3o para o banco de Dados SqlServer 2008R2 mais mudando poucas coisas
#vc consegue utilizar Bancos diferentes tab\u00e9m como Postgres, Mysql,Oracle
#e tamb\u00e9m pode utilizar bancos de dados NoSql como MongoDB, Casandra,Firebase entre outros.
#com a vangem de n\u00e3o fazer muitas altera\u00e7\u00f5es nas classes Java nem nas configura\u00e7\u00f5es 
server.port = 8080

#essa linha faz o spring exibir a string sql que o hibernate gerou
spring.jpa.show-sql=true

#essa linha \u00e9 onde configura o driver de conex\u00e3o com o banco de dados
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

#essa linha \u00e9 a string de conex\u00e3o com o banco de dados onde vc coloca o ip do seu banco e a porta
#caso vc esteja em ambiente de desenvolvimento e ainda n\u00e3o tem um servidor dedicado para o banco de dados
#vc deve colocar o banco local que esta utilizando dessa forma 
#jdbc:sqlserver://127.0.0.1:1433;databaseName=NomeBancoDeDados
#depois dos : \u00e9 o n\u00famero da porta do banco de dados o padr\u00e3o do SqlServer \u00e9 1433
spring.datasource.url=jdbc:sqlserver://192.168.0.12:1433;databaseName=NomeBancoDeDados

#outra configura\u00e7\u00e3o do banco de dados aqui vc coloca o seu nome de usuario cadastrado no banco de dados
spring.datasource.username=UsuarioBancoDeDados

#aqui vc coloca a senha do usuario do banco de dados
spring.datasource.password=SenhaBancoDeDados

#aqui \u00e9 uma cnfigura\u00e7\u00e3o do hibernate para que ele possa conversar com o seu banco de dados
#se vc configurou corretamente as linhas acima essa linha vc pode deixar comentada
#s\u00f3 coloquei mesmo como boa pratica por que o hibernate costuma pegar driver atualizado e podem ocorrer problemas
#caso o seu banco seja de vers\u00f5es antigas o que \u00e9 o meu caso se eu n\u00e3o colocar essa linha ele pega o driver para o 
#SQLServer2012 que at\u00e9 \u00e9 compativel mais n\u00e3o 100% pois o meu banco \u00e9 2008
spring.jpa.hibernate.dialect=org.hibernate.dialect.SQLServer2008Dialect

#essa linha vc tem que tomar cuidado ao colocar o projeto no servidor para produ\u00e7\u00e3o ou seja quando 
#vc terminar de desenvolver mude de update para none por que se vc deixar update e fizer modifica\u00e7\u00e3o
#nas classes de modelo vc pode acabar alterando sem querer as tabelas do seu banco de dados
#porque o spring tem um framework chamdo spring data que mapeia as tabelas do seu banco de acordo com
#as suas classes de modelo
spring.jpa.hibernate.ddl-auto=update

#esse linha eu adicionei mais n\u00e3o consegui utilizar o pelomenos ainda n\u00e3o descobri como utilizar
#segundo a documenta\u00e7\u00e3o do Spring boot essa linha libera para vc utilizar aquele padr\u00e3o de camelcase nos nomes das
#colunas do seu banco de dados mais eu tentei utilizar e n\u00e3o resolveu acabei tendo que criar views dentro do banco 
#s\u00f3 assim eu deixei as tabelas que j\u00e1 existiam visieis ao Spring Data 
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

#essa linha tamb\u00e9m \u00e9 para o banco de dados caso vc tenha palavras que o Spring utiliza como reservadas e vc no banco
#utiliza elas como nome de campos ou de tabelas com essa linha ele deixa vc utilizar 
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
